{
	"info": {
		"_postman_id": "09f9d7a9-98d0-d2f1-eeec-363c735aba39",
		"name": "Bluz REST",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "Pages:JSON",
			"item": [
				{
					"name": "overview collection",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"tests[\"Content-Type is JSON\"] = responseHeaders[\"Content-Type\"] == \"application/json\";",
									"tests[\"Content-Length is present\"] = responseHeaders.hasOwnProperty(\"Content-Length\");",
									"tests[\"Content-Length is greater than zero\"] = responseHeaders[\"Content-Length\"] > 0;",
									"tests[\"Body is empty\"] = responseBody === \"\";"
								]
							}
						}
					],
					"request": {
						"method": "HEAD",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": "{{URL}}/api/pages/",
						"description": "SHOULD return **200**  \nSHOULD return `Content-Length`  \nSHOULD without body  "
					},
					"response": []
				},
				{
					"name": "overview item",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"tests[\"Content-Type is JSON\"] = responseHeaders[\"Content-Type\"] == \"application/json\";",
									"tests[\"Content-Length is present\"] = responseHeaders.hasOwnProperty(\"Content-Length\");",
									"tests[\"Content-Length is greater than zero\"] = responseHeaders[\"Content-Length\"] > 0;",
									"tests[\"Body is empty\"] = responseBody === \"\";"
								]
							}
						}
					],
					"request": {
						"method": "HEAD",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": "{{URL}}/api/pages/1",
						"description": "SHOULD return **200**  \nSHOULD return `Content-Length`  \nSHOULD without body  "
					},
					"response": []
				},
				{
					"name": "collection",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"tests[\"Content-Type is JSON\"] = responseHeaders[\"Content-Type\"] == \"application/json\";"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": "{{URL}}/api/pages/",
						"description": "SHOULD return **206**  \nSHOULD return part of collection in JSON  "
					},
					"response": []
				},
				{
					"name": "item",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"tests[\"Content-Type is JSON\"] = responseHeaders[\"Content-Type\"] == \"application/json\";",
									"",
									"var data = JSON.parse(responseBody);",
									"tests[\"Item with ID=1 is present\"] = parseInt(data[0].id) === 1;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": "{{URL}}/api/pages/1",
						"description": "SHOULD return **200**  \nSHOULD return item in JSON  "
					},
					"response": []
				},
				{
					"name": "create item",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 501\"] = responseCode.code === 501;",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"tests[\"Content-Type is JSON\"] = responseHeaders[\"Content-Type\"] == \"application/json\";"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": "{{URL}}/api/pages/1",
						"description": "SHOULD return **403**   "
					},
					"response": []
				},
				{
					"name": "update item",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 501\"] = responseCode.code === 501;",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"tests[\"Content-Type is JSON\"] = responseHeaders[\"Content-Type\"] == \"application/json\";"
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": []
						},
						"url": "{{URL}}/api/pages/1",
						"description": "SHOULD return **403**   "
					},
					"response": []
				},
				{
					"name": "update item",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 501\"] = responseCode.code === 501;",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"tests[\"Content-Type is JSON\"] = responseHeaders[\"Content-Type\"] == \"application/json\";"
								]
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": []
						},
						"url": "{{URL}}/api/pages/1",
						"description": "SHOULD return **403**   "
					},
					"response": []
				},
				{
					"name": "item",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 501\"] = responseCode.code === 501;",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"tests[\"Content-Type is JSON\"] = responseHeaders[\"Content-Type\"] == \"application/json\";"
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": "{{URL}}/api/pages/1",
						"description": "SHOULD return **403**  "
					},
					"response": []
				}
			]
		}
	]
}